<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.2.0">Jekyll</generator><link href="https://hyeoni90.github.io/feed.xml" rel="self" type="application/atom+xml" /><link href="https://hyeoni90.github.io/" rel="alternate" type="text/html" /><updated>2021-05-08T21:58:57+09:00</updated><id>https://hyeoni90.github.io/feed.xml</id><title type="html">Hyeoni’s Blog</title><subtitle>Step By Step 🏃‍</subtitle><author><name>hyeoni90</name></author><entry><title type="html">[개발 환경 세팅] Mac Terminal 꾸미기</title><link href="https://hyeoni90.github.io/etc/2021/04/30/how-to-decorate-terminal.html" rel="alternate" type="text/html" title="[개발 환경 세팅] Mac Terminal 꾸미기" /><published>2021-04-30T00:00:00+09:00</published><updated>2021-04-30T00:00:00+09:00</updated><id>https://hyeoni90.github.io/etc/2021/04/30/how-to-decorate-terminal</id><content type="html" xml:base="https://hyeoni90.github.io/etc/2021/04/30/how-to-decorate-terminal.html">&lt;blockquote&gt;
  &lt;p&gt;Mac OS Catalina 이후부터는 zsh 쉘이 기본입니다.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;우선, Mac의 패키지 매니저 인 &lt;a href=&quot;https://brew.sh/&quot;&gt;Homebrew 설치&lt;/a&gt; 합니다.&lt;/p&gt;

&lt;h2 id=&quot;oh-my-zsh-설치-하기&quot;&gt;oh-my-zsh 설치 하기&lt;/h2&gt;
&lt;p&gt;oh-my-zsh로 zsh에 플러그인을 설치해 테마를 적용할 수 있습니다.&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;sh &lt;span class=&quot;nt&quot;&gt;-c&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;$(&lt;/span&gt;curl &lt;span class=&quot;nt&quot;&gt;-fsSL&lt;/span&gt; https://raw.github.com/robbyrussell/oh-my-zsh/master/tools/install.sh&lt;span class=&quot;si&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;&lt;img width=&quot;100%&quot; alt=&quot;oh my zsh install 2021-04-30 &quot; src=&quot;https://user-images.githubusercontent.com/47413225/116677967-c30cd300-a9e3-11eb-920e-67dbddac8d8a.png&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;zsh-설정-하기&quot;&gt;zsh 설정 하기&lt;/h2&gt;
&lt;p&gt;zsh 설정 파일에 들어가서 설정을 변경해보겠습니다.&lt;/p&gt;
&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;vi ~/.zshrc
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;h3 id=&quot;테마-변경&quot;&gt;테마 변경&lt;/h3&gt;

&lt;p&gt;설정 파일에 들어가면, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ZSH_THEME=&quot;robbyrussell&quot;&lt;/code&gt; 라인을 확인할 수 있습니다.&lt;/p&gt;

&lt;p&gt;저는, agnoster 테마로 변경 하겠습니다.&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;ZSH_THEME=&quot;agnoster&quot;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;다른 테마를 &lt;a href=&quot;https://github.com/ohmyzsh/ohmyzsh/wiki/Themes&quot;&gt;ohmyzsh Github&lt;/a&gt; 을 참고하세요.&lt;/p&gt;

&lt;h3 id=&quot;zsh-설정-반영&quot;&gt;zsh 설정 반영&lt;/h3&gt;
&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;source&lt;/span&gt; ~/.zshrc
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;그렇다면, 아래와 같이 폰트가 깨진다.&lt;/p&gt;

&lt;p&gt;&lt;img width=&quot;100%&quot; alt=&quot;break font on terminal 2021-04-30 &quot; src=&quot;https://user-images.githubusercontent.com/47413225/116682919-db7fec00-a9e9-11eb-84a2-bf6cb6171a95.png&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;폰트-변경&quot;&gt;폰트 변경&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/powerline/fonts/blob/master/Meslo%20Slashed/Meslo%20LG%20M%20Regular%20for%20Powerline.ttf&quot;&gt;Meslo LG M Regular for Powerline.ttf&lt;/a&gt; 서체 다운로드 및 설치&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/powerline/fonts&quot;&gt;여기&lt;/a&gt; 를 참고 하여 원하는 폰트를 설치 해서 사용하면 됩니다.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img width=&quot;100%&quot; alt=&quot;change font on iterm2 2021-04-30 &quot; src=&quot;https://user-images.githubusercontent.com/47413225/116684745-4a5e4480-a9ec-11eb-81b2-c86c70bbc40a.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;iTerm2 &amp;gt; Preperences &amp;gt; Profiles 에서 Text 탭에서 Font 변경 하면 아래와 같이 됩니다.&lt;/p&gt;

&lt;p&gt;&lt;img width=&quot;100%&quot; alt=&quot;fix font on terminal 2021-04-30 &quot; src=&quot;https://user-images.githubusercontent.com/47413225/116684856-77125c00-a9ec-11eb-9d4d-b74fc3c5e755.png&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;사용자-이름-숨기기&quot;&gt;사용자 이름 숨기기&lt;/h2&gt;
&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;vi ~/.zshrc&lt;/code&gt; 하단에 아래 코드 추가 후 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;source ~/.zshrc&lt;/code&gt; 명령어를 실행하여 반영한다.&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;DEFAULT_USER=&quot;$(whoami)&quot;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;유용한-플러그인-추가&quot;&gt;유용한 플러그인 추가&lt;/h2&gt;

&lt;p&gt;oh-my-zsh 플러그인 추가 하기 위해서 해당 디렉토리로 이동.&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ cd ~/.oh-my-zsh/custom/plugins/
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;zsh-syntax-highlighting-설치&quot;&gt;zsh-syntax-highlighting 설치&lt;/h3&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ git clone https://github.com/zsh-users/zsh-syntax-highlighting.git

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;h3 id=&quot;zsh-autosuggestions-설치&quot;&gt;zsh-autosuggestions 설치&lt;/h3&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ git clone https://github.com/zsh-users/zsh-autosuggestions
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;설정-파일에-플러그인-추가&quot;&gt;설정 파일에 플러그인 추가&lt;/h3&gt;
&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;vi ~/.zshrc&lt;/code&gt; 로 설정 파일을 열어 하단 plugins에 설치한 플러그인을 추가&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;plugins= (
  git
  zsh-syntax-highlighting
  zsh-autosuggestions
)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</content><author><name>hyeoni90</name></author><category term="etc" /><summary type="html">Mac OS Catalina 이후부터는 zsh 쉘이 기본입니다.</summary></entry><entry><title type="html">JVM 정리</title><link href="https://hyeoni90.github.io/java/2020/11/12/jvm.html" rel="alternate" type="text/html" title="JVM 정리" /><published>2020-11-12T23:55:50+09:00</published><updated>2020-11-12T23:55:50+09:00</updated><id>https://hyeoni90.github.io/java/2020/11/12/jvm</id><content type="html" xml:base="https://hyeoni90.github.io/java/2020/11/12/jvm.html">&lt;h1 id=&quot;jvm-정리&quot;&gt;JVM 정리&lt;/h1&gt;

&lt;h2 id=&quot;jvm-heap-메모리-구조&quot;&gt;JVM Heap 메모리 구조&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;Young, Old 영역으로 나뉜다.
    &lt;ul&gt;
      &lt;li&gt;Young 영역은 Eden, Survivor 영역으로 구성,
        &lt;ul&gt;
          &lt;li&gt;Eden: Object 가 Heap 에 최초로 할당 되는 장소
            &lt;ul&gt;
              &lt;li&gt;Eden 영역이 꽉 차게 되면 Object 참조 여부를 따져 만약 참조가 되어 있는 Live Object 면 Survivor 영역으로 넘기고, 참조가 끊어진 Garbage Object이면 그냥 남겨 놓는다. 모든 Live Object 가 Survivor 영여긍로 넘어가면 Eden영역을 모두 청소한다.&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
          &lt;li&gt;Survivor: Eden 영역에서 살아남은 Object 들이 잠시 머무르는 곳
            &lt;ul&gt;
              &lt;li&gt;Minor GC: Survivor 영역은 2개로 구성되는데 Live Object를 대피 시킬 때는 하나의 Survivor 영역만 사용하게 됨. 전반 적인 과정을 뜻함!!&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
          &lt;li&gt;Young 영역에서 오래 남아 성숙된 Object(특정 회수 이상 참조되어 기준 age를 초과한 object 말함) 는 Old 영역으로 이동&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;Old 영역은 비교적 오랫동안 참조가 되어 이용 되고 있고 앞으로도 계속 사용될 확률이 높은 Object들을 저장하는 곳&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;Full GC(Major GC): Promotion 과정 중 Old 영역 메모리도 충분하지 않으면 해당 영역에도 GC발생!&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;gc-관련-장애-발생-유형의-원인-및-해결-방안&quot;&gt;GC 관련 장애 발생 유형의 원인 및 해결 방안&lt;/h3&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;OOME(Out Of Memory Error)&lt;/code&gt; : JVM이 Heap Memory를 더이상 Object를 할당할 수 없을 때 발생하는 오류!
2가지 유형으로 크게 구분할 수 있다.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;OOME: java heap space
    &lt;ul&gt;
      &lt;li&gt;
        &lt;p&gt;Heap memory공간이 부족하여 발생. ⇒ 공간 부족의 원인으로는 Heap memory의 크기가 작아서 발생하는 경우와 애플리케이션 문제로 발생하는 경우가 있음.&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;해결방안)&lt;/p&gt;
        &lt;ul&gt;
          &lt;li&gt;-Xmx 옵션을 사용해서 Heap memory 크기를 증가 시키는 방법 → 이는 GC time의 증가르 동반하기 때문에 충분한 사전 테스트 필요&lt;/li&gt;
          &lt;li&gt;애플리케이션 프로파일링 → Heap Dump 분석을 기반으로 쓸데 없이 많은 Memory 를 사용하거나 Memory leak 유발하는 로직을 찾아내어 수정한다.&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;OOME: PerGem space
    &lt;ul&gt;
      &lt;li&gt;Java Heap memory 영역 중 Permanent영역은 String pool, Class Method 과 연관된 각종 Meta Data 등을 저장하는 용도로 사용.&lt;/li&gt;
      &lt;li&gt;JVM 기동 시 로딩되는 Class or String 수가 많다면 해당 오류의 원인 된다.&lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;또한 Classloader leak에 의해 발생될 수 있음&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;해결 방안)
        &lt;ul&gt;
          &lt;li&gt;JVM 튜닝!!&lt;/li&gt;
          &lt;li&gt;일반 비즈니스 프로그램으로 핸들링할 수 없기 때문에 JVM 튜닝으로도 해결이 되지 않는다면, WAS or JDK 버그를 의심해 봐야한다!&lt;/li&gt;
          &lt;li&gt;VisualVM JDK6 부터 제공되는 툴로 실행 중인JVM에 대해 자세한 정보를 GUI로 제공해줌. Thread 모니터링, JVM memory 모니터링, Thread dump 및 head dump 생성 등&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;references&quot;&gt;References&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.yes24.com/Product/Goods/51095692&quot;&gt;JVM Performance Optimizing 및 성능분석 사례 Java Virtual Machine&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://blog.voidmainvoid.net/190&quot;&gt;자바 가비지 컬렉션 설명 및 종류&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><author><name>hyeoni90</name></author><category term="java" /><summary type="html">JVM 정리</summary></entry><entry><title type="html">Mac OS에 RabbitMQ 설치하기</title><link href="https://hyeoni90.github.io/rabbitmq/2019/11/05/how-to-install-rabbitmq-on-mac.html" rel="alternate" type="text/html" title="Mac OS에 RabbitMQ 설치하기" /><published>2019-11-05T00:00:00+09:00</published><updated>2019-11-05T00:00:00+09:00</updated><id>https://hyeoni90.github.io/rabbitmq/2019/11/05/how-to-install-rabbitmq-on-mac</id><content type="html" xml:base="https://hyeoni90.github.io/rabbitmq/2019/11/05/how-to-install-rabbitmq-on-mac.html">&lt;h3 id=&quot;1-homebrew-로-설치하기&quot;&gt;1. homebrew 로 설치하기&lt;/h3&gt;
&lt;p&gt;설치하기 전에 rabbitMQ 패키지 확인 한다.&lt;/p&gt;
&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;brew search rabbitmq
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;보이지 않을 경우 homebrew 최신인지 확인한다.&lt;/p&gt;
&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;brew update
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;다음 RabbitMQ 서버 설치 한다.&lt;/p&gt;
&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;brew &lt;span class=&quot;nb&quot;&gt;install &lt;/span&gt;rabbitmq
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;&lt;a href=&quot;https://brew.sh/index_ko&quot;&gt;homebrew 설치하기&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;2-설치-확인하고-실행해보기&quot;&gt;2. 설치 확인하고 실행해보기&lt;/h3&gt;

&lt;p&gt;패키지 설치 확인 /usr/local/Cellar/{패키지명}/{버전}&lt;/p&gt;
&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;cd&lt;/span&gt; /usr/local/Cellar/rabbitmq/
3.8.0
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;RabbitMQ 서버 스크립트 및 CLI 도구 위치&lt;/p&gt;
&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;cd&lt;/span&gt; /usr/local/sbin
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;ls
&lt;/span&gt;rabbitmq-plugins      rabbitmqctl           rabbitmq-defaults     
rabbitmq-queues       rabbitmq-diagnostics  rabbitmq-server       
rabbitmq-env          rabbitmqadmin         ...
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;서버-실행&quot;&gt;서버 실행&lt;/h4&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;cd&lt;/span&gt; /usr/local/sbin
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;./rabbitmq-server

  &lt;span class=&quot;c&quot;&gt;##  ##      RabbitMQ 3.8.0&lt;/span&gt;
  &lt;span class=&quot;c&quot;&gt;##  ##&lt;/span&gt;
  &lt;span class=&quot;c&quot;&gt;##########  Copyright (C) 2007-2019 Pivotal Software, Inc.&lt;/span&gt;
  &lt;span class=&quot;c&quot;&gt;######  ##&lt;/span&gt;
  &lt;span class=&quot;c&quot;&gt;##########  Licensed under the MPL.  See https://www.rabbitmq.com/&lt;/span&gt;

  Doc guides: https://rabbitmq.com/documentation.html
  Support:    https://rabbitmq.com/contact.html
  Tutorials:  https://rabbitmq.com/getstarted.html
  Monitoring: https://rabbitmq.com/monitoring.html

  Logs: /usr/local/var/log/rabbitmq/rabbit@localhost.log
        /usr/local/var/log/rabbitmq/rabbit@localhost_upgrade.log

  Config file&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;s&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;: &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;none&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;

  Starting broker... completed with 6 plugins.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;or&lt;/p&gt;
&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;brew services start rabbitmq
&lt;span class=&quot;o&quot;&gt;==&amp;gt;&lt;/span&gt; Successfully started &lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;rabbitmq&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;label: homebrew.mxcl.rabbitmq&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;위와 같이 정상적으로 구동되는지 확인할 수 있다.&lt;/p&gt;

&lt;h4 id=&quot;서버-중지&quot;&gt;서버 중지&lt;/h4&gt;
&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;brew services stop rabbitmq
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;h4 id=&quot;서버-재시작&quot;&gt;서버 재시작&lt;/h4&gt;
&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;brew services restart rabbitmq
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;h4 id=&quot;상태-확인&quot;&gt;상태 확인&lt;/h4&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ cd /usr/local/sbin
$ ./rabbitmqctl status
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;3-계정-추가&quot;&gt;3. 계정 추가&lt;/h3&gt;
&lt;h4 id=&quot;terminal-에서-rabbitmqctl-로-계정-추가-방법&quot;&gt;Terminal 에서 rabbitmqctl 로 계정 추가 방법&lt;/h4&gt;
&lt;p&gt;사용자 리스트 확인&lt;/p&gt;
&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;cd&lt;/span&gt; /usr/local/sbin
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;./rabbitmqctl list_users
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;사용자 추가&lt;/p&gt;
&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;./rabbitmqctl add_user &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;사용자&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;비번&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;사용자 태그 설정&lt;/p&gt;
&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;./rabbitmqctl set_user_tags &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;사용자&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;태그&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
Setting tags &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;user &lt;span class=&quot;s2&quot;&gt;&quot;사용자&quot;&lt;/span&gt; to &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;태] ...
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;사용자 접속 권한 부여&lt;/p&gt;
&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;./rabbitmqctl set_permissions &lt;span class=&quot;nt&quot;&gt;-p&lt;/span&gt; / &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;사용자&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;.*&quot;&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;.*&quot;&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;.*&quot;&lt;/span&gt;
Setting permissions &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;user &lt;span class=&quot;s2&quot;&gt;&quot;사용&quot;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;vhost &lt;span class=&quot;s2&quot;&gt;&quot;/&quot;&lt;/span&gt; ...
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;사용자의 퍼미션을 확인&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;./rabbitmqctl list_user_permissions &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;사용자&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;관리자-사이트에서-계정-추가-방법&quot;&gt;관리자 사이트에서 계정 추가 방법&lt;/h4&gt;
&lt;p&gt;http://localhost:15672/#/ guest / guest 로 로그인 후, Admin 탭 이동&lt;/p&gt;

&lt;p&gt;아래 정보 입력 후 &lt;strong&gt;Add a User&lt;/strong&gt; 버튼 클릭 후 계정 추가&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Username : 사용자 이름&lt;/li&gt;
  &lt;li&gt;Password : 비밀번호&lt;/li&gt;
  &lt;li&gt;Tags : 계정 권한 부여 (Admin, Monitoring, Policymaker, Management, None 이렇게 5가지 종류)&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;references&quot;&gt;References&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.rabbitmq.com/install-homebrew.html&quot;&gt;The Homebrew RabbitMQ Formula&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><author><name>hyeoni90</name></author><category term="rabbitmq" /><summary type="html">1. homebrew 로 설치하기 설치하기 전에 rabbitMQ 패키지 확인 한다. $ brew search rabbitmq 보이지 않을 경우 homebrew 최신인지 확인한다. $ brew update 다음 RabbitMQ 서버 설치 한다. $ brew install rabbitmq homebrew 설치하기</summary></entry><entry><title type="html">Welcome to Jekyll!</title><link href="https://hyeoni90.github.io/jekyll/update/2019/10/23/welcome-to-jekyll.html" rel="alternate" type="text/html" title="Welcome to Jekyll!" /><published>2019-10-23T20:41:50+09:00</published><updated>2019-10-23T20:41:50+09:00</updated><id>https://hyeoni90.github.io/jekyll/update/2019/10/23/welcome-to-jekyll</id><content type="html" xml:base="https://hyeoni90.github.io/jekyll/update/2019/10/23/welcome-to-jekyll.html">&lt;p&gt;You’ll find this post in your &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;_posts&lt;/code&gt; directory. Go ahead and edit it and re-build the site to see your changes. You can rebuild the site in many different ways, but the most common way is to run &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;jekyll serve&lt;/code&gt;, which launches a web server and auto-regenerates your site when a file is updated.&lt;/p&gt;

&lt;p&gt;Jekyll requires blog post files to be named according to the following format:&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;YEAR-MONTH-DAY-title.MARKUP&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Where &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;YEAR&lt;/code&gt; is a four-digit number, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;MONTH&lt;/code&gt; and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;DAY&lt;/code&gt; are both two-digit numbers, and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;MARKUP&lt;/code&gt; is the file extension representing the format used in the file. After that, include the necessary front matter. Take a look at the source for this post to get an idea about how it works.&lt;/p&gt;

&lt;p&gt;Jekyll also offers powerful support for code snippets:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;print_hi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Hi, &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;print_hi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'Tom'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;#=&amp;gt; prints 'Hi, Tom' to STDOUT.&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Check out the &lt;a href=&quot;https://jekyllrb.com/docs/home&quot;&gt;Jekyll docs&lt;/a&gt; for more info on how to get the most out of Jekyll. File all bugs/feature requests at &lt;a href=&quot;https://github.com/jekyll/jekyll&quot;&gt;Jekyll’s GitHub repo&lt;/a&gt;. If you have questions, you can ask them on &lt;a href=&quot;https://talk.jekyllrb.com/&quot;&gt;Jekyll Talk&lt;/a&gt;.&lt;/p&gt;</content><author><name>hyeoni90</name></author><category term="jekyll" /><category term="update" /><summary type="html">You’ll find this post in your _posts directory. Go ahead and edit it and re-build the site to see your changes. You can rebuild the site in many different ways, but the most common way is to run jekyll serve, which launches a web server and auto-regenerates your site when a file is updated.</summary></entry></feed>